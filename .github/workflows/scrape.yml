name: Scrape Limit-up Stocks

on:
  schedule:
    - cron: '30 2 * * *'  # UTC 14:00 (北京时间 22:00)
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  TZ: Asia/Shanghai  # 设置时区环境变量

jobs:
  scrape:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests urllib3 chardet beautifulsoup4 lxml pytz  # 添加 pytz
    
    - name: Set timezone
      run: |
        sudo timedatectl set-timezone Asia/Shanghai
        echo "系统时间: $(date)"
        echo "北京时间: $(TZ=Asia/Shanghai date)"
    
    - name: Run scraper
      env:
        TZ: Asia/Shanghai  # 确保 Python 脚本使用正确时区
      run: |
        echo "开始运行爬虫..."
        echo "当前时区: $TZ"
        python scraper.py
        echo "爬虫运行完成"
    
    - name: Keep repo active
      run: |
        echo "Last run: $(TZ=Asia/Shanghai date)" > .github/last_run.txt
    
    - name: Check for changes
      id: verify-changed-files
      run: |
        git add -A
        if git diff --staged --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No changes to commit"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Changes detected, will commit"
        fi
    
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "Update limit-up stocks data: $(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M:%S')"
        git push
    
    - name: Show completion status
      run: |
        echo "完成时间: $(TZ=Asia/Shanghai date)"
        if [ "${{ steps.verify-changed-files.outputs.changed }}" == "true" ]; then
          echo "✅ 数据已更新并推送到仓库"
        else
          echo "ℹ️ 没有新数据需要更新"
        fi
